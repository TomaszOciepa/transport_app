<div class="container py-5">
  <div class="row justify-content-center">
    <div class="col-lg-10">
      <h3 class="mb-4 fw-bold text-start">Oblicz cenę transportu</h3>

      <div class="card shadow-lg rounded-4 border-0">
        <div class="card-body p-5">
          <%= form_with(model: @order, url: preview_orders_path, local: true, id: "order-form") do |f| %>

            <!-- Step 1 -->
            <div class="step step-active bg-light rounded-3 p-4 mb-4" id="step-1">
              <h5 class="fw-bold mb-4">Dane odbioru i dostawy</h5>
              <div class="mb-4">
                <%= f.label :pickup_address, "Odbiór", class: "form-label fw-bold" %>
                <%= f.text_field :pickup_address, class: "form-control form-control-lg step-field", placeholder: "np. Warszawa, Marszałkowska 1", required: true %>
                <%= f.hidden_field :pickup_lat, id: "pickup_lat" %>
                <%= f.hidden_field :pickup_lon, id: "pickup_lon" %> 
              </div>
              <div class="mb-4">
                <%= f.label :delivery_address, "Dostawa", class: "form-label fw-bold" %>
                <%= f.text_field :delivery_address, class: "form-control form-control-lg step-field", placeholder: "np. Kraków, Długa 10", required: true %>
                <%= f.hidden_field :delivery_lat, id: "delivery_lat" %>
                <%= f.hidden_field :delivery_lon, id: "delivery_lon" %>
              </div>
            </div>

            <!-- Step 2 -->
            <div class="step step-disabled bg-light rounded-3 p-4 mb-4" id="step-2">
              <h5 class="fw-bold mb-4">Wybierz typ pojazdu</h5>
              <div class="row g-3">
                <% @vehicle_types.each do |vehicle| %>
                  <div class="col-6 col-md-4">
                    <label class="w-100 vehicle-card-label">
                      <%= f.radio_button :vehicle_type_id, vehicle.id, class: "btn-check vehicle-radio", autocomplete: "off", required: true, disabled: true %>
                      <div class="card h-100 text-center vehicle-card">
                        <div class="card-body">
                          <i class="bi bi-truck display-5 text-primary"></i>
                          <h6 class="mt-2"><%= vehicle.name %></h6>
                          <small><%= number_to_currency(vehicle.price_per_km, unit: "PLN") %>/km</small>
                        </div>
                      </div>
                    </label>
                  </div>
                <% end %>
              </div>
            </div>

            <!-- Step 3 -->
            <div class="step step-disabled bg-light rounded-3 p-4 mb-4" id="step-3">
              <h5 class="fw-bold mb-4">Wybierz typ usługi</h5>
              <div class="d-flex flex-wrap gap-3 mb-4">
                <% @service_types.each do |service| %>
                  <label>
                    <%= f.radio_button :service_type_id, service.id, class: "btn-check step-field", autocomplete: "off", required: true, disabled: true %>
                    <span class="btn btn-outline-secondary rounded-pill px-4 py-2"><%= service.name %></span>
                  </label>
                <% end %>
              </div>

              <div class="mb-4">
                <%= f.label :pickup_date, "Data i godzina odbioru", class: "form-label fw-bold" %>
                <%= f.datetime_local_field :pickup_date, class: "form-control form-control-lg step-field", required: true %>
              </div>

            <div class="d-flex justify-content-end mt-4">
              <%= f.submit "Oblicz koszt", class: "btn btn-lg btn-dark px-5 rounded-pill shadow-sm custom-submit" %>
            </div>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">

<style>
  .step-disabled {
    opacity: 0.5;
    pointer-events: none;
  }
  .step-active {
    opacity: 1;
  }
  .custom-submit {
    background-color: #000;
    border: none;
    transition: all 0.3s ease;
  }
  .custom-submit:hover {
    background-color: #333;
    transform: translateY(-2px);
    box-shadow: 0 4px 10px rgba(0,0,0,0.3);
  }
  .custom-submit:active {
    transform: translateY(0);
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
  }
.vehicle-card {
  border: 2px solid #ddd;
  border-radius: 12px;
  background-color: #f8f9fa;
  transition: all 0.3s ease;
  cursor: pointer;
}

.vehicle-card-label:hover .vehicle-card {
  border-color: #555;
  box-shadow: 0 6px 18px rgba(0,0,0,0.2);
  transform: translateY(-3px);
}

.vehicle-radio:checked + .vehicle-card {
  border-color: #000;
  background-color: #e9ecef;
  font-weight: bold;
  box-shadow: 0 8px 20px rgba(0,0,0,0.3);
  transform: translateY(-5px);
}

.vehicle-card-body i {
  transition: transform 0.3s ease;
}

.vehicle-radio:checked + .vehicle-card i {
  transform: scale(1.1);
}


</style>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const steps = document.querySelectorAll(".step");
    let currentStep = 0;

    function activateStep(stepIndex) {
      steps[stepIndex].classList.remove("step-disabled");
      steps[stepIndex].classList.add("step-active");
      steps[stepIndex].querySelectorAll("input").forEach(el => el.disabled = false);
      steps[stepIndex].scrollIntoView({ behavior: "smooth" });
    }

    function checkStepCompletion(stepIndex) {
      const fields = steps[stepIndex].querySelectorAll(".step-field");
      let valid = true;
      fields.forEach(field => {
        if (!field.checkValidity()) valid = false;
      });
      if (valid && stepIndex < steps.length - 1) {
        currentStep++;
        activateStep(currentStep);
      }
    }

    steps.forEach((step, index) => {
      step.addEventListener("input", () => checkStepCompletion(index));
      step.addEventListener("change", () => checkStepCompletion(index));
    });

    activateStep(currentStep);
  });
</script>


<script>
  function initAutocomplete() {
    const pickupInput = document.getElementById('order_pickup_address');
    if (pickupInput) {
      const pickupAutocomplete = new google.maps.places.Autocomplete(pickupInput, 
      // {
      //   componentRestrictions: { country: 'pl' }
      // }
      );

      pickupAutocomplete.addListener('place_changed', () => {
        const place = pickupAutocomplete.getPlace();
        if (!place.geometry) return; // brak geometrii
        pickupInput.value = place.formatted_address; // ustawia widoczne pole
        document.getElementById('pickup_lat').value = place.geometry.location.lat();
        document.getElementById('pickup_lon').value = place.geometry.location.lng();
      });
    }

    const deliveryInput = document.getElementById('order_delivery_address');
    if (deliveryInput) {
      const deliveryAutocomplete = new google.maps.places.Autocomplete(deliveryInput, 
      // {
      //   componentRestrictions: { country: 'pl' }
      // }
      );

      deliveryAutocomplete.addListener('place_changed', () => {
        const place = deliveryAutocomplete.getPlace();
        if (!place.geometry) return;
        deliveryInput.value = place.formatted_address;
        document.getElementById('delivery_lat').value = place.geometry.location.lat();
        document.getElementById('delivery_lon').value = place.geometry.location.lng();
      });
    }
  }

  document.addEventListener("turbo:load", initAutocomplete);
</script>
